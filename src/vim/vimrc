""" Plugins

call plug#begin('~/.vim/plugged')
    
Plug 'dbakker/vim-paragraph-motion'
Plug 'justinmk/vim-sneak'
Plug 'tpope/vim-surround'
Plug 'tommcdo/vim-exchange'
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/argtextobj.vim'
Plug 'vim-scripts/ReplaceWithRegister'
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-entire'
Plug 'machakann/vim-highlightedyank'
Plug 'preservim/nerdtree'

call plug#end()

""" Plugin settings

let g:argtextobj_pairs="[:],(:),<:>"

""" Other settings

set showmode
set incsearch
set hlsearch
set relativenumber

""" Custom mappings

" Space key is leader
nnoremap <SPACE> <Nop>
let mapleader=" "

" alternative esc remap experiment
inoremap jk <Esc>

" in visual mode, reselect block after indent/outdent, to allow repeating
vnoremap < <gv
vnoremap > >gv

" in insert mode, insert space after current cursor position without moving
inoremap \\\\ <Space><C-o>h

" insert blank line below current line, stay at orig position; stay in original mode
" (clobbers mark o to use as temporary location; undo will unfortunately restore the mark)
nnoremap <C-k> moo<Esc>`o:delmark o<CR>
" -- on next line, `l' compensates for cursor left shift on exiting insert mode
inoremap <C-k> <Esc>lmoo<Esc>`o:delmark o<CR>i

" shift current line down, stay on new empty line; stay in original mode
nnoremap <C-j> O<Esc>0D
" -- on next line, 0C clears line since nopaste option not supported
inoremap <C-j> <Esc>O<Esc>0C

" append semicolor at end of line; in insert mode, also append newline
nnoremap <C-;> A;<Esc>
inoremap <C-;> <Esc>A;<CR>
